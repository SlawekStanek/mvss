{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "uniqueDnsPrefix": {
      "type": "string"
    }
  },
  "variables": {
    "scaleSetCount": 2
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "myVnet",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-12-01",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "mySubnet",
            "properties": {
              "addressPrefix": "10.0.0.0/16"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat('myPip', copyIndex())]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-12-01",
      "copy": {
        "name": "pipLoop",
        "count": "[variables('scaleSetCount')]"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('uniqueDnsPrefix'), copyIndex())]"
        }
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[concat('myLb', copyIndex())]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-12-01",
      "copy": {
        "name": "lbLoop",
        "count": "[variables('scaleSetCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/myPip', copyIndex())]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat('myPip', copyIndex()))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[concat('myBePool', copyIndex())]"
          }
        ],
        "inboundNatPools": [
          {
            "name": "[concat('myNatPool', copyIndex())]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat('myLb', copyIndex())), '/frontendIPConfigurations/loadBalancerFrontEnd')]"
              },
              "protocol": "tcp",
              "frontendPortRangeStart": "50000",
              "frontendPortRangeEnd": "50119",
              "backendPort": "22"
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat('myLb', copyIndex())), '/frontendIPConfigurations/loadBalancerFrontEnd')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat('myLb', copyIndex())), '/backendAddressPools/', concat('myBePool', copyIndex()))]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat('myLb', copyIndex())), '/probes/tcpProbe')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpProbe",
            "properties": {
              "protocol": "tcp",
              "port": 80,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[concat('myScaleSet', copyindex())]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-04-30-preview",
      "copy": {
        "name": "scaleSetLoop",
        "count": "[variables('scaleSetCount')]"
      },
      "dependsOn": [
        "Microsoft.Network/virtualNetworks/myVnet",
        "[concat('Microsoft.Network/loadBalancers/myLb', copyIndex())]"
      ],
      "sku": {
        "name": "Standard_A1",
        "capacity": 2
      },
      "properties": {
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "16.04-LTS",
              "version": "latest"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[concat('ss', copyIndex(), 'vm')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "myNic",
                "properties": {
                  "primary": "true",
                  "ipConfigurations": [
                    {
                      "name": "myIpConfig",
                      "properties": {
                        "subnet": {
                          "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', 'myVnet'), '/subnets/mySubnet')]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat('myLb', copyIndex())), '/backendAddressPools/', concat('myBePool', copyIndex()))]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat('myLb', copyIndex())), '/inboundNatPools/', concat('myNatPool', copyIndex()))]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "apacheextension",
                "properties": {
                  "publisher": "Microsoft.Azure.Extensions",
                  "type": "CustomScript",
                  "typeHandlerVersion": "2.0",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "fileUris": [
                      "https://raw.githubusercontent.com/gatneil/scripts/master/apacheUniqueHost.sh"
                    ],
                    "commandToExecute": "bash apacheUniqueHost.sh"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "apiVersion": "2015-11-01",
      "type": "Microsoft.Network/trafficManagerProfiles",
      "name": "VMSSEndpointExample",
      "location": "global",
      "dependsOn": [
        "Microsoft.Network/publicIPAddresses/myPip0",
        "Microsoft.Network/publicIPAddresses/myPip1"
      ],
      "properties": {
        "profileStatus": "Enabled",
        "trafficRoutingMethod": "Weighted",
        "dnsConfig": {
          "relativeName": "[parameters('uniqueDnsPrefix')]",
          "ttl": 30
        },
        "monitorConfig": {
          "protocol": "http",
          "port": 80,
          "path": "/"
        },
        "endpoints": [
          {
            "name": "endpoint0",
            "type": "Microsoft.Network/trafficManagerProfiles/azureEndpoints",
            "properties": {
              "targetResourceId": "[resourceId('Microsoft.Network/publicIPAddresses', 'myPip0')]",
              "endpointStatus": "Enabled",
              "weight": 1
            }
          },
          {
            "name": "endpoint1",
            "type": "Microsoft.Network/trafficManagerProfiles/azureEndpoints",
            "properties": {
              "targetResourceId": "[resourceId('Microsoft.Network/publicIPAddresses', 'myPip1')]",
              "endpointStatus": "Enabled",
              "weight": 1
            }
          }
        ]
      }
    }
  ]
}
